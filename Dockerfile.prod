FROM composer:2
FROM php:8.1-fpm-alpine

LABEL org.opencontainers.image.source=https://github.com/openaction/docker-php

ENV AMQP_VERSION=1.11.0 \
    APCU_VERSION=5.1.21 \
    REDIS_VERSION=5.3.4 \
    COMPOSER_ALLOW_SUPERUSER=1

RUN apk add --no-cache --virtual .persistent-deps \
        git \
        gmp-dev \
        icu-libs \
        icu-data-full \
        libpq \
        make \
        mysql-client \
        nano \
        nginx \
        postgresql-client \
        poppler \
        poppler-utils \
        supervisor \
        zlib

RUN set -xe \
    && apk add --no-cache --virtual .build-deps \
        $PHPIZE_DEPS \
        freetype \
        freetype-dev \
        gnu-libiconv \
        icu-dev \
        jpeg-dev \
        libpng \
        libpng-dev \
        libjpeg \
        libjpeg-turbo \
        libjpeg-turbo-dev \
        libwebp-dev \
        libxslt-dev \
        postgresql-dev \
        rabbitmq-c-dev \
        sqlite-dev \
        libzip-dev \
    && docker-php-ext-configure gd --with-freetype --with-jpeg --with-webp \
    && docker-php-ext-configure intl \
    && docker-php-ext-install \
        bcmath \
        exif \
        fileinfo \
        gd \
        gmp \
        intl \
        pcntl \
        pdo_mysql \
        pdo_pgsql \
        pdo_sqlite \
        xsl \
        zip \
    && pecl install \
        amqp-${AMQP_VERSION} \
        apcu-${APCU_VERSION} \
        redis-${REDIS_VERSION} \
	&& docker-php-ext-enable --ini-name 05-opcache.ini opcache \
    && docker-php-ext-enable --ini-name 75-amqp.ini amqp \
    && docker-php-ext-enable --ini-name 80-apcu.ini apcu \
	&& docker-php-ext-enable --ini-name 85-redis.ini redis \
    && runDeps="$( \
        scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions \
            | tr ',' '\n' \
            | sort -u \
            | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' \
    )" \
    && apk add --no-cache --virtual .php-phpexts-rundeps $runDeps \
    && apk del .build-deps \
    && mkdir -p /run/nginx/ \
    && mkdir /etc/periodic/1min

RUN version=$(php -r "echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;") \
    && architecture=$(uname -m) \
    && curl -A "Docker" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/alpine/$architecture/$version \
    && mkdir -p /tmp/blackfire \
    && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp/blackfire \
    && mv /tmp/blackfire/blackfire-*.so $(php -r "echo ini_get ('extension_dir');")/blackfire.so \
    && printf "extension=blackfire.so\nblackfire.agent_socket=tcp://blackfire:8307\n" > $PHP_INI_DIR/conf.d/blackfire.ini \
    && rm -rf /tmp/blackfire /tmp/blackfire-probe.tar.gz

RUN mkdir -p /tmp/blackfire \
    && architecture=$(uname -m) \
    && curl -A "Docker" -L https://blackfire.io/api/v1/releases/cli/linux/$architecture | tar zxp -C /tmp/blackfire \
    && mv /tmp/blackfire/blackfire /usr/bin/blackfire \
    && rm -Rf /tmp/blackfire

COPY --from=0 /usr/bin/composer /usr/bin/composer
COPY conf/php-prod.ini /usr/local/etc/php/php.ini
COPY conf/www.conf /usr/local/etc/php-fpm.d/www.conf
COPY conf/nginx.conf /etc/nginx/nginx.conf
COPY conf/supervisord.conf /usr/local/etc/supervisord.conf
COPY conf/crontabs /etc/crontabs/root

RUN composer self-update

EXPOSE 80

WORKDIR /app
CMD ["supervisord", "--configuration", "/usr/local/etc/supervisord.conf"]
